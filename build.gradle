plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation('com.github.javafaker:javafaker:1.0.2'){ exclude module: 'org.yaml' }
    implementation('org.yaml:snakeyaml:1.33')
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.3.0'
    implementation('com.h2database:h2')
    implementation('jakarta.validation:jakarta.validation-api:3.0.2')
    implementation('org.springframework.boot:spring-boot-starter-validation')
    implementation('org.projectlombok:lombok:1.18.30')
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation 'io.micrometer:micrometer-core'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    // implementation('org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2')
    implementation('org.springframework.boot:spring-boot-starter-cache')
    implementation('org.redisson:redisson:3.20.0')

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
